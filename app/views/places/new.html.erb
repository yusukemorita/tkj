<%= javascript_include_tag "/assets/javascripts/new" %>

<div class='new_form'>
  <p class='new_title wf-mplus1p'>新しい卓球場を登録</p>
  <%= render 'form' %>
</div>

<input id="pac-input" class="controls" type="text" placeholder="Search Box">
<div id="map" class="new_map"></div>

<script type="text/javascript">
  function initAutocomplete() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -33.8688, lng: 151.2195},
      zoom: 13,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });
		var infowindow = new google.maps.InfoWindow();
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var marker = new google.maps.Marker({
          icon: '/assets/current_position.png',
          position: pos,
          map: map
        });
        map.setCenter(pos);
      }, function() {
        handleLocationError(true, infoWindow, map.getCenter());
      });
    } else {
      // Browser doesn't support Geolocation
      handleLocationError(false, infoWindow, map.getCenter());
    }
    // Create the search box and link it to the UI element.
    var input = document.getElementById('pac-input');
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
		var service = new google.maps.places.PlacesService(map);
    var markers = [];
    // Listen for the event fired when the user selects a prediction and retrieve
    // more details for that place.
    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      console.log(places);

      if (places.length == 0) {
        return;
      }

      // Clear out the old markers.
      markers.forEach(function(marker) {
        marker.setMap(null);
      });
      markers = [];

      // For each place, get the name and location.
      var bounds = new google.maps.LatLngBounds();
      places.forEach(function(place) {

        // Create a marker for each place.
        var marker = new google.maps.Marker({
          map: map,
          title: place.name,
          position: place.geometry.location
        });
				markers.push(marker);
				google.maps.event.addListener(marker, 'click', function(evt) {
          infowindow.setContent(place.name + '<br>' + '<a href=' + place.website + '>ホームページ</a>' + '<br>' + place.geometry.location.lat().toString() + ',' + place.geometry.location.lng().toString());
          infowindow.open(map, marker);
          $('#place_latitude').val(place.geometry.location.lat().toString());
          $('#place_longitude').val(place.geometry.location.lng().toString());
          $('#place_title').val(place.name);
          $('#place_url').val(place.website);
        });
        if (place.geometry.viewport) {
          // Only geocodes have viewport.
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }
      });
      map.fitBounds(bounds);
    });
  }
</script>
<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA1UBETjFq1eApVpLAX-JdAz3tsHf7Bpsc&libraries=places&callback=initAutocomplete">
</script>
