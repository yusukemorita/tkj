<%= javascript_include_tag "/assets/javascripts/new" %>

<div class="new-parent vertical-align-parent">
  <div class="vertical-align-child">
    <input id="pac-input" style="width:50%;" class="controls" type="text" placeholder="卓球場を検索">
    <div id="map" class="new_map"></div>
  </div>
</div>

<%= render 'form' %>

<!-- Modal -->
<div class="modal fade" id="newModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog newModal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">卓球場をGoogleマップで検索</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Googleマップで新しく登録したい卓球場を検索し、赤いマーカーをクリックしてください。
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">閉じる</button>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  function initAutocomplete() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 35.689791, lng: 139.692133},
      zoom: 13,
      mapTypeId: 'roadmap',
      mapTypeControl: false
    });

		var infowindow = new google.maps.InfoWindow();

    // Create the search box and link it to the UI element.
    var input = document.getElementById('pac-input');
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
		var service = new google.maps.places.PlacesService(map);
    var markers = [];
    // Listen for the event fired when the user selects a prediction and retrieve
    // more details for that place.
    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }

      // Clear out the old markers.
      markers.forEach(function(marker) {
        marker.setMap(null);
      });
      markers = [];

      // For each place, get the name and location.
      var bounds = new google.maps.LatLngBounds();
      places.forEach(function(place) {

        // Create a marker for each place.
        var marker = new google.maps.Marker({
          map: map,
          title: place.name,
          position: place.geometry.location
        });
				markers.push(marker);

        //マーカー上にinfowindow表示
        infowindow.setContent(
          place.name + '<br>' +
          'マーカーをクリック！');
        infowindow.open(map, marker);

				google.maps.event.addListener(marker, 'click', function(evt) {
          if ($(window).width() > 600){
            $('.new_place').show();
            $('.new-parent').css({
              width: 60 + '%'
            });
          };
          var info = []; //info = [address, lat, long, name, url]
          info[0] = place.formatted_address;
          info[1] = place.geometry.location.lat().toString();
          info[2] = place.geometry.location.lng().toString();
          info[3] = place.name;
          info[4] = place.website;
          $("#address_input").val(place.formatted_address);
          $("#lat_input").val(place.geometry.location.lat().toString());
          $("#long_input").val(place.geometry.location.lng().toString());
          $("#name_input").val(place.name);
          $("#url_input").val(place.website);
        });
        if (place.geometry.viewport) {
          // Only geocodes have viewport.
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }
      });
      map.fitBounds(bounds);
    });
  }
</script>
<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA1UBETjFq1eApVpLAX-JdAz3tsHf7Bpsc&libraries=places&callback=initAutocomplete">
</script>
